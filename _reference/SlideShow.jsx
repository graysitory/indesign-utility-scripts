// SlideShow.jsx//// Keith Gilbert// www.gilbertconsulting.com// blog.gilbertconsulting.com//// Modified 2010-06-18#target indesign// Check to see whether any InDesign documents are open.// If no documents are open, display an error message.if (app.documents.length > 0) {            // Dialog box to get desired time between slides, in seconds as well as looping options    var params = showDialog();    if (isFinite(params.myDelay)) {        nextSlide(params.myDelay, params.myLoop);        }}else {    // No documents are open, so display an error message.    alert("No InDesign documents are open. Please open a document and try again.");}function pausecomp(millis) {    var date = new Date();    var curDate = null;    do {        curDate = new Date();    }     while(curDate-date < millis);} function showDialog() {    // Prompt the user for parameters    var myDialog = app.dialogs.add({name:"Slide Show", canCancel:true});    with (myDialog) {        with (dialogColumns.add()) {            staticTexts.add({staticLabel:"Enter desired delay between slides (in seconds): "});            staticTexts.add({staticLabel:"Loop at end "});            staticTexts.add({staticLabel:"(Press the Esc key twice to end the slide show.)"});        }        with (myDialog.dialogColumns.add()) {            var myDelayField = textEditboxes.add({editContents:"", minWidth: 60});            var myLoopField = checkboxControls.add();        }    }    if (myDialog.show() == true) { // User didn't click the cancel button        var myDelay = myDelayField.editContents;        var myLoop = myLoopField.checkedState;        myDialog.destroy();        return {myDelay:myDelay,myLoop:myLoop};    }    else {        myDialog.destroy();        return {myDelay:"x"};    }	}function nextSlide(myDelay, myLoop) {        // Turn on screen redraw while the script runs    var userRedrawSetting = app.scriptPreferences.enableRedraw;    app.scriptPreferences.enableRedraw = true;        var myDoc = app.activeDocument;        // Turn to first page;    myDoc.spreads.firstItem().select();    // Put window in Presentation mode    app.activeWindow.screenMode = ScreenModeOptions.PRESENTATION_PREVIEW;        do {        // Turn to first page;        myDoc.spreads.firstItem().select();        app.activeWindow.zoom(ZoomOptions.FIT_SPREAD);                        // Pause        pausecomp(myDelay*1000);                app.activeWindow.zoom(ZoomOptions.FIT_SPREAD);                for (var i=0; i<=myDoc.spreads.length-2; i ++) {            try {                var myMenuAction1 = app.menuActions.itemByID(118818); // Invoke "next page" menu item                myMenuAction1.invoke();                    }            catch (myError) {};            // Pause            pausecomp(myDelay*1000);             }    }    while (myLoop == true);    // Turn screen redraw back to what it was    app.scriptPreferences.enableRedraw = userRedrawSetting;}